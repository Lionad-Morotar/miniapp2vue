{"version":3,"sources":["util/index.js","lib/extract.js","lib/swan2vue/template.js","lib/swan2vue/index.js","lib/index.js","src/index.js"],"names":["isValidArrayIndex","val","n","parseFloat","String","Math","floor","isFinite","hasProto","remove","arr","item","length","index","indexOf","splice","def","obj","key","enumerable","Object","defineProperty","value","writable","configurable","hasOwnProperty","prototype","hasOwn","call","isObject","_toString","toString","isPlainObject","toRawType","slice","extend","to","_from","extract","folders","config","fixMap","swan","templateFile","styleFile","logicFile","configFile","typeMap","all","template","style","logic","plat","type","fileType","files","forEach","folder","afterFix","fileName","replace","fileNamePrefix","push","map","file","console","log","fs","convert","paths","path","content","readFileSync","compiled","compile","errors","Error","compileAST","ast","COMPILER","swan2vue","handle","Array","res","compilerName","compilerHandle","unsolvedFolder","vuetpl","Compiler"],"mappings":"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","file":"src.a2b27638.map","sourceRoot":"..","sourcesContent":["/**\r\n * Check if val is a valid array index.\r\n */\r\nfunction isValidArrayIndex(val) {\r\n  var n = parseFloat(String(val));\r\n  return n >= 0 && Math.floor(n) === n && isFinite(val);\r\n}\r\n\r\n// can we use __proto__?\r\nvar hasProto = \"__proto__\" in {};\r\n\r\n/**\r\n * Remove an item from an array\r\n */\r\nfunction remove(arr, item) {\r\n  if (arr.length) {\r\n    var index = arr.indexOf(item);\r\n    if (index > -1) {\r\n      return arr.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Define a property.\r\n */\r\nfunction def(obj, key, val, enumerable) {\r\n  Object.defineProperty(obj, key, {\r\n    value: val,\r\n    enumerable: !!enumerable,\r\n    writable: true,\r\n    configurable: true\r\n  });\r\n}\r\n\r\n/**\r\n * Check whether the object has the property.\r\n */\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\nfunction hasOwn(obj, key) {\r\n  return hasOwnProperty.call(obj, key);\r\n}\r\n\r\n/**\r\n * Quick object check - this is primarily used to tell\r\n * Objects from primitive values when we know the value\r\n * is a JSON-compliant type.\r\n */\r\nfunction isObject(obj) {\r\n  return obj !== null && typeof obj === \"object\";\r\n}\r\n\r\n/**\r\n * Strict object type check. Only returns true\r\n * for plain JavaScript objects.\r\n */\r\nvar _toString = Object.prototype.toString;\r\nfunction isPlainObject(obj) {\r\n  return _toString.call(obj) === \"[object Object]\";\r\n}\r\n\r\n/**\r\n * Get the raw type string of a value e.g. [object Object]\r\n */\r\nvar _toString = Object.prototype.toString;\r\nfunction toRawType(value) {\r\n  return _toString.call(value).slice(8, -1);\r\n}\r\n\r\n/**\r\n * Mix properties into target object.\r\n */\r\nfunction extend(to, _from) {\r\n  for (var key in _from) {\r\n    to[key] = _from[key];\r\n  }\r\n  return to;\r\n}\r\n\r\nexport {\r\n  def,\r\n  extend,\r\n  remove,\r\n  hasOwn,\r\n  hasProto,\r\n  isObject,\r\n  isPlainObject,\r\n  isValidArrayIndex\r\n};\r\n","function extract(folders, config) {\r\n    const fixMap = {\r\n        swan: {\r\n            templateFile: '.swan',\r\n            styleFile: '.css',\r\n            logicFile: '.js',\r\n            configFile: '.json',\r\n        },\r\n    }\r\n    const typeMap = {\r\n        all: ['template', 'style', 'logic', 'config'],\r\n        config: ['config'],\r\n        template: ['template'],\r\n        style: ['style'],\r\n        logic: ['logic'],\r\n    }\r\n    let plat = config.plat\r\n    let type = config.type,\r\n        fileType = typeMap[type]\r\n    let files = []\r\n\r\n    folders.forEach(folder => {\r\n        let afterFix = fixMap[plat]\r\n        let fileName = folder.replace(/^.*\\/([^\\/]*)$/, '$1'),\r\n            fileNamePrefix = `${folder}/${fileName}`\r\n        let templateFile = `${fileNamePrefix}${afterFix['templateFile']}`,\r\n            styleFile = `${fileNamePrefix}${afterFix['styleFile']}`,\r\n            logicFile = `${fileNamePrefix}${afterFix['logicFile']}`,\r\n            configFile = `${fileNamePrefix}${afterFix['configFile']}`\r\n        files.push({\r\n            templateFile,\r\n            styleFile,\r\n            logicFile,\r\n            configFile,\r\n        })\r\n    })\r\n    // console.log(files)\r\n\r\n    return files.map(file => {\r\n        return fileType.map(type => file[`${type}File`])\r\n    })\r\n}\r\n\r\nexport default extract\r\n","// const fs = require('fs')\r\nimport fs from 'fs'\r\n\r\nconsole.log(fs)\r\n\r\nlet template = {\r\n    convert(paths) {\r\n        return paths.map(path => {\r\n            let content = fs.readFileSync(path, 'utf8')\r\n            let compiled = template.compile(content)\r\n            if (compiled.errors.length) {\r\n                throw new Error(compiled.errors[0])\r\n            }\r\n            return template.compileAST(compiled.ast)\r\n        })\r\n    },\r\n    compile(content) {\r\n        console.log(content)\r\n        return {\r\n            errors: [],\r\n            ast: []\r\n        }\r\n    },\r\n    compileAST() {\r\n        return []\r\n    }\r\n}\r\n\r\nexport default {\r\n    convert: template.convert,\r\n}\r\n","import template from './template';\r\n\r\nexport default {\r\n    template\r\n}\r\n","import { extend } from \"/util\"\r\n\r\nimport extract from \"./extract\"\r\nimport swan2vue from \"./swan2vue\"\r\n\r\nconst COMPILER = {\r\n    swan2vue,\r\n    handle(folders, config) {\r\n        return extract(folders, config)\r\n    }\r\n}\r\n\r\n/** Compiler ç¼è¯å½æ°\r\n *\r\n * @var folder { Array, String } åä¸ªé¡µé¢æä»¶å¤¹\r\n * @var config.plat { String } required [ 'swan', 'wx', 'ali' ] è¢«ç¼è¯çå¹³å°\r\n * @var config.type { String } [ 'template', 'javascript', 'all' ] ç¼è¯ç±»å\r\n */\r\nfunction convert(folder, config) {\r\n    /** default var */\r\n\r\n    let folders = folder instanceof Array ? folder : [folder]\r\n    config = extend(\r\n        {\r\n            type: \"all\"\r\n        },\r\n        config\r\n    )\r\n\r\n    let res = []\r\n\r\n    /** logic */\r\n\r\n    let compilerName = `${config.plat}2vue`,\r\n        compilerHandle = config.type\r\n    let handle = COMPILER.handle(folders, config)\r\n    handle.forEach(item => {\r\n        res.push(\r\n            COMPILER[compilerName][compilerHandle].convert(item)\r\n        )\r\n    })\r\n\r\n    /** return val */\r\n\r\n    return res\r\n}\r\n\r\nexport default {\r\n    convert\r\n}","import Compiler from '/lib'\r\n\r\nvar unsolvedFolder = '/src/swan/swan-template'\r\n\r\nvar vuetpl = Compiler.convert(unsolvedFolder, {\r\n    plat: 'swan',\r\n    type: 'template',\r\n})\r\n\r\nconsole.log('RESULT:', vuetpl)\r\n"]}